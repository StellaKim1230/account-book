image: node:10

pipelines:
  default:
    - step:
        name: Test
        caches:
          - node
        script:
          - yarn
          - yarn test
  branches:
    feature/*:
      - step:
          name: Build
          caches:
            - node
          script:
            - yarn
            - yarn build:dev
      - step:
          name: Deploy to dev bucket
          deployment: test
          caches:
            - node
          image:
            name: 573474552688.dkr.ecr.ap-northeast-2.amazonaws.com/build-server:latest
            aws:
              access-key: $AWS_ACCESS_KEY_ID
              secret-key: $AWS_SECRET_ACCESS_KEY
          script:
            - echo API_URL=$DEV_API_URL > .env
            - yarn
            - yarn build:dev
            - aws s3 rm s3://${DEV_S3_BUCKET}/ --recursive
            - aws s3 cp ./dist s3://${DEV_S3_BUCKET}/ --recursive
      - step:
          name: Deploy to staging
          deployment: staging
          trigger: manual
          caches:
            - node
          image:
            name: 573474552688.dkr.ecr.ap-northeast-2.amazonaws.com/build-server:latest
            aws:
              access-key: $AWS_ACCESS_KEY_ID
              secret-key: $AWS_SECRET_ACCESS_KEY
          script:
            - echo API_URL=$STAGE_API_URL > .env
            - yarn
            - yarn build:stage
            - aws s3 rm s3://${STAGE_S3_BUCKET}/ --recursive
            - aws s3 cp ./dist s3://${STAGE_S3_BUCKET}/ --recursive
            - aws cloudfront create-invalidation --distribution-id ${STAGE_DISTRIBUTION_ID} --paths /*
    master:
      - step:
          name: Deploy to production
          deployment: production
          caches:
            - node
          image:
            name: 573474552688.dkr.ecr.ap-northeast-2.amazonaws.com/build-server:latest
            aws:
              access-key: $AWS_ACCESS_KEY_ID
              secret-key: $AWS_SECRET_ACCESS_KEY
          script:
            - echo API_URL=$STAGE_API_URL > .env
            # Uncomment to below line when after making production evironment.
            # - yarn
            # - yarn build:prod
            # - aws s3 rm s3://${PROD_S3_BUCKET}/ --recursive
            # - aws s3 cp ./dist s3://${PROD_S3_BUCKET}/ --recursive
            # - aws cloudfront create-invalidation --distribution-id ${PROD_DISTRIBUTION_ID} --paths /*

